export const EVENT_TEMPLATES = {
  auth_logged_in_with_username: gettext('User {user_username} with full name {user_full_name} authenticated successfully with username and password.'),
  auth_logged_in_with_openid: gettext('User {user_username} with full name {user_full_name} authenticated successfully with OpenID.'),
  auth_logged_in_with_google: gettext('User {user_username} with full name {user_full_name} authenticated successfully with Google.'),
  auth_logged_in_with_facebook: gettext('User {user_username} with full name {user_full_name} authenticated successfully with Facebook.'),
  auth_logged_in_with_smart_id_ee: gettext('User {user_username} with full name {user_full_name} authenticated successfully with Smart ID EE.'),
  customer_account_credited: gettext('Balance has been increased by {amount} for customer {customer_name}.'),
  customer_account_debited: gettext('Balance has been decreased by {amount} for customer {customer_name}.'),
  customer_creation_succeeded: gettext('Organization {customer_name} has been created.'),
  customer_deletion_succeeded: gettext('Organization {customer_name} has been deleted.'),
  customer_update_succeeded: gettext('Organization {customer_name} has been updated.'),
  invoice_creation_succeeded: gettext('Invoice for organization {customer_name} for the period of {invoice_date} has been created.'),
  invoice_deletion_succeeded: gettext('Invoice for organization {customer_name} for the period of {invoice_date} has been deleted.'),
  invoice_update_succeeded: gettext('Invoice for organization {customer_name} for the period of {invoice_date} has been updated.'),
  payment_approval_succeeded: gettext('Payment for {customer_name} has been approved.'),
  payment_cancel_succeeded: gettext('Payment for {customer_name} has been cancelled.'),
  payment_creation_succeeded: gettext('Created a new payment for {customer_name}.'),
  project_creation_succeeded: gettext('Project {project_name} has been created.'),
  project_deletion_succeeded: gettext('Project {project_name} has been deleted.'),
  project_name_update_succeeded: gettext('Project has been renamed from {project_previous_name} to {project_name}.'),
  project_update_succeeded: gettext('Project {project_name} has been updated.'),
  quota_threshold_reached: gettext('{quota_name} quota threshold has been reached for project {project_name}.'),
  resource_creation_failed: gettext('{resource_full_name} creation has failed.'),
  resource_creation_scheduled: gettext('{resource_full_name} creation has been scheduled by {user_username}.'),
  resource_creation_succeeded: gettext('{resource_full_name} has been created by {user_username}.'),
  resource_deletion_failed: gettext('{resource_full_name} deletion has failed.'),
  resource_deletion_scheduled: gettext('{resource_full_name} has been scheduled to deletion by {user_username}.'),
  resource_deletion_succeeded: gettext('{resource_full_name} has been deleted by {user_username}.'),
  resource_import_succeeded: gettext('{resource_full_name} has been imported by {user_username}.'),
  resource_restart_failed: gettext('{resource_full_name} restart has failed.'),
  resource_restart_scheduled: gettext('{resource_full_name} has been scheduled to restart by {user_username}.'),
  resource_restart_succeeded: gettext('{resource_full_name} has been restarted by {user_username}.'),
  resource_start_failed: gettext('{resource_full_name} start has failed.'),
  resource_start_scheduled: gettext('{resource_full_name} has been scheduled to start by {user_username}.'),
  resource_start_succeeded: gettext('{resource_full_name} has been started by {user_username}.'),
  resource_stop_failed: gettext('{resource_full_name} stop has failed.'),
  resource_stop_scheduled: gettext('{resource_full_name} has been scheduled to stop by {user_username}.'),
  resource_stop_succeeded: gettext('{resource_full_name} has been stopped by {user_username}.'),
  resource_update_succeeded: gettext('{resource_full_name} has been updated by {user_username}.'),
  role_granted: gettext('User {affected_user_full_name} has gained role of {role_name}.'),
  role_revoked: gettext('User {affected_user_full_name} has revoked role of {role_name}.'),
  service_project_link_creation_failed: gettext('Creation of service project link {service_name} has failed.'),
  ssh_key_creation_succeeded: gettext('SSH key {ssh_key_name} has been created.'),
  ssh_key_deletion_succeeded: gettext('SSH key {ssh_key_name} has been deleted.'),
  user_activated: gettext('User {affected_user_full_name} has been activated.'),
  user_creation_succeeded: gettext('User {affected_user_full_name} has been created.'),
  user_deactivated: gettext('User {affected_user_full_name} has been deactivated.'),
  user_deletion_succeeded: gettext('User {affected_user_full_name} has been deleted.'),
  user_organization_approved: gettext('User {affected_user_full_name} has been approved for organization {affected_organization}.'),
  user_organization_claimed: gettext('User {affected_user_full_name} has claimed organization {affected_organization}.'),
  user_organization_rejected: gettext('User {affected_user_full_name} claim for organization {affected_organization} has been rejected.'),
  user_organization_removed: gettext('User {affected_user_full_name} has been removed from organization {affected_organization}.'),
  user_password_updated: gettext('Password has been changed for user {affected_user_full_name}.'),
  user_update_succeeded: gettext('User {affected_user_full_name} has been updated.'),
};

export const EVENT_ICONS_TYPES = {
  auth: [gettext('Authentication events'), 'user'],
  invoice: [gettext('Invoice events'), 'customer'],
  user: [gettext('Key management events'), 'user'],
  customer: [gettext('Organization events'), 'customer'],
  payment: [gettext('Payment events'), 'customer'],
  project: [gettext('Project events'), 'project'],
  service: [gettext('Providers events'), 'service'],
  resource: [gettext('Resource events'), 'resource'],
  role: [gettext('Role management events'), 'user'],
  quota: [gettext('Quota events'), 'customer'],
  ssh: [gettext('SSH key events'), 'key'],
};

export const EVENT_ROUTES = {
  affected_user: 'users.details',
  user: 'users.details',
  project: 'project.details',
  customer: 'organization.details',
  affected_organization: 'organization.details',
  instance: 'resources.details',
  resource: 'resources.details',
  service: 'organization.details',
};

export const DELETION_EVENTS = [
  'customer_deletion_succeeded',
  'invoice_deletion_succeeded',
  'project_deletion_succeeded',
  'project_group_deletion_succeeded',
  'resource_deleted',
  'ssh_key_deletion_succeeded',
  'user_deletion_succeeded'
];
